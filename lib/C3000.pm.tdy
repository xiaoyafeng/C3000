package C3000;

use Win32::OLE;
use Win32::OLE::Variant;
use Carp;
use Encode;
use DateTime;
use DateTime::Format::Natural;

#

=head1
extends qw(
	C3000::MeterDataIntergface
	C3000::ADASInstanceManager
	C3000::ContainerManager
	C3000::ContainerTemplateManager
	C3000::ActiveElementManager
	C3000::ActiveElementTemplateManager
	C3000::SecurityUserSession
	C3000::DataSegment

);
consider use Moose
=head1 NAME

C3000 - A perl wrap for C3000 API

=head1 VERSION

Version 0.01

=cut

our $VERSION = '0.01';

=head1 SYNOPSIS


Perhaps a little code snippet.

    use C3000;

    my $foo = C3000->new();
    ...

=head1 EXPORT

A list of functions that can be exported.  You can delete this section
if you don't export anything, such as for a purely object-oriented module.


=head2  new
init sub 

=cut

my $Empty;

sub new {
    my $this              = shift;
    my $container_manager = Win32::OLE->new('Athena.CT.ContainerManager.1');
    my $active_element_manager =
      Win32::OLE->new('Athena.CT.ActiveElementManager.1');
    my $active_element_template_manager =
      Win32::OLE->new('Athena.CT.ActiveElementTemplateManager.1');
    my $security_token = Win32::OLE->new('AthenaSecurity.UserSessions.1');
    $security_token->ConvergeLogin( 'Administrator', 'Athena', 0, 666 );
    my $adas_instance_manager =
      Win32::OLE->new('Athena.AS.ADASInstanceManager.1')
      or die;
    my $adas_template_manager =
      Win32::OLE->new('Athena.AS.AdasTemplateManager.1')
      or die;
    my $container_template_manager =
      Win32::OLE->new('Athena.CT.ContainerTemplateManager.1')
      or die;
    my $data_segment_helper = Win32::OLE->new('AthenaSecurity.DataSegment.1')
      or die;
    my $meter_data_interface =
      Win32::OLE->new('DeviceAndMeterdata.ADASDeviceAndMeterdata.1');

    my $self = {
        MeterDataInterface           => $meter_data_interface,
        ContainerManager             => $container_manager,
        ContainerTemplateManager     => $container_template_manager,
        ActiveElementManager         => $active_element_manager,
        ActiveElementTemplateManager => $active_element_template_manager,
        UserSessions                 => $security_token,
        ADASInstanceManager          => $adas_instance_manager,
        ADASTemplateManager          => $adas_template_manager,
        DataSegment                  => $data_segment_helper,
    };
    return bless $self, $this;

}

=head2 get_LP
return a recordset of LoadProfile


e.g.:
while(!$rs->EOF){
...
$rs->MoveNext();
}
=cut

sub get_LP {
    my $self = shift;
    my ( $return_fields, $criteria ) = @_;
    my $rs =
      $self->{'MeterDataInterface'}
      ->GetLoadProfile( $return_fields, $criteria, 0 )
      or die $hl->{'MeterDataInterface'}->LastError();
    return $rs;
}

=head2 search_device

return a recordset fitting criteria
=cut

sub search_device {
    my $self = shift;
    my ( $return_fields, $criteria ) = @_;
    my $rs =
      $self->{'MeterDataIntergface'}
      ->FindVariable( $return_fields, $criteria, $Empty, 0 )
      or die $self->{'MeterDataInterface'}->LastError();

    return $rs;
}

=head2  convert_VT_DATE 
C3000 utils
pass to a DateTime obj and return a VT_DATE variable.
=cut

sub convert_VT_DATE {

    use constant EPOCH       => 25569;
    use constant SEC_PER_DAY => 86400;

    my $dt = shift;

    return Variant( VT_DATE, EPOCH + $dt->epoch / SEC_PER_DAY );
}

=head1 AUTHOR

Andy Xiao, C<< <xyf.gmail.com> >>

=head1 BUGS

Please report any bugs or feature requests to C<bug-c3000 at rt.cpan.org>, or through
the web interface at L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=C3000>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.




=head1 SUPPORT

You can find documentation for this module with the perldoc command.

    perldoc C3000


You can also look for information at:

=over 4

=item * RT: CPAN's request tracker (report bugs here)

L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=C3000>

=item * AnnoCPAN: Annotated CPAN documentation

L<http://annocpan.org/dist/C3000>

=item * CPAN Ratings

L<http://cpanratings.perl.org/d/C3000>

=item * Search CPAN

L<http://search.cpan.org/dist/C3000/>

=back


=head1 ACKNOWLEDGEMENTS


=head1 LICENSE AND COPYRIGHT

Copyright 2011 Andy Lester.

This program is free software; you can redistribute it and/or modify it
under the terms of either: the GNU General Public License as published
by the Free Software Foundation; or the Artistic License.

See http://dev.perl.org/licenses/ for more information.


=cut

1;    # End of C3000
